#!/bin/bash

# Rolf Niepraschk, Version 2.0.5, 2023-11-21

CAPTION='[IPTC:2:120]' # Caption/Abstract
DATETIME='[EXIF:DateTimeOriginal]' 

VIDEO_FILE='slideshow.mp4'
RESOLUTION='1920x1080'
DELAY=10 # seconds
# The usual time jump for the arrow keys, e.g. for 'vlc', is 10 seconds.

rm -f temp-????-?.png

n=0
find . -maxdepth 1 -name "*" | sort | while read f ; do # works with spaces in names
  if file "$f" | grep -qE 'image|bitmap'; then # only image files
    n=$(( ${n}+1 ))
    echo "${n}.: ${f}"
    desc_file=$(printf "temp-%04d-0.png" ${n})
    img_file=$(printf "temp-%04d-1.png" ${n})
    cap_text=$(identify -format "%${CAPTION}" "${f}" 2> /dev/null)
    date_text=$(identify -format "%${DATETIME}" "${f}" 2> /dev/null \
      | rev | sed 's/:/-/g3' | rev) # replacing the first two ":" with "-"
    text=$(echo -e "${cap_text}\n\n${date_text}" | \
      sed -z 's/^\s*//' | sed -z 's/\s*$//') # removing leading/trailing white spaces
    if [ -n "${text}" ]; then
      convert -fill white -background black \
        -pointsize 20 -size 480x -gravity center caption:"${text}" \
          -resize "${RESOLUTION}" -extent "${RESOLUTION}" "PNG24:${desc_file}"
    fi
    convert "${f}" -background black -gravity center \
      -resize "${RESOLUTION}" -extent "${RESOLUTION}" "PNG24:${img_file}"    
  fi
done

echo -e "\nCreate: ${VIDEO_FILE}"

cat temp-????-?.png | \
  ffmpeg -y -loglevel error \
    -f lavfi -i anullsrc -framerate "1/${DELAY}" -f image2pipe -i - -r 25 \
     -c:v libx264  -profile:v baseline -pix_fmt yuv420p -c:a aac \
       -max_muxing_queue_size 4000 -shortest "${VIDEO_FILE}"

rm -f temp-????-?.png

echo "done."

exit

cat temp-????-?.png | \
  ffmpeg -y -loglevel error -f lavfi  -i anullsrc  -framerate "1/${DELAY}" -f image2pipe -i - \
     -c:a aac -c:v libx264 -r 25 -shortest "${VIDEO_FILE}"

ffmpeg -f lavfi -y -i anullsrc -rtsp_transport tcp -i rtsp://myrtspurl -re -framerate 1 -loop 1 -f image2pipe -i pathtofile.png -filter_complex "[2:v]setpts=PTS-STARTPTS[a];[1:v][a]overlay=25:25" -tune zerolatency -vcodec libx264 -c:v libx264 -crf 30 -preset ultrafast -c:a aac -strict experimental -f flv rtmp://youtubeurl

cat temp-????-?.png | \
  ffmpeg -y -loglevel error -framerate "1/${DELAY}" -f image2pipe -i - \
    -f lavfi -i anullsrc -c:a aac -shortest -c:v libx264 -r 25 "${VIDEO_FILE}"

cat temp-????-?.png | \
  ffmpeg -y -loglevel error \
    -f lavfi -i anullsrc -framerate "1/${DELAY}" -f image2pipe -i - -r 25 \
     -c:v libx264 -crf 30 -preset ultrafast -c:a aac -max_muxing_queue_size 4000 -shortest "${VIDEO_FILE}"
